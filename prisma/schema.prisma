generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id              String           @id @default(cuid())
  wallet          String           @unique
  email           String           @default("")
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  userDiscordData UserDiscordData?
  userQuestTask   UserQuestTask[]
  userTwitterData UserTwitterData?
}

model UserDiscordData {
  id                 String   @id @default(cuid())
  userId             String   @unique
  discordId          String   @unique @default("")
  discordName        String   @default("")
  discordRole        String   @default("")
  discordVerified    Boolean  @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  discordAccessToken String   @default("")
  user               User     @relation(fields: [userId], references: [id])
}

model UserTwitterData {
  id                 String   @id @default(cuid())
  userId             String   @unique
  twitterIdstr       String   @unique @default("")
  twitterName        String   @default("")
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  twitterAccessToken String   @default("")
  twitterTweetId     String   @default("")
  user               User     @relation(fields: [userId], references: [id])
}

model QuestTask {
  id            String          @id @default(cuid())
  taskName      String          @unique
  active        Boolean         @default(true)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  UserQuestTask UserQuestTask[]
}

model UserQuestTask {
  id        String    @id @default(cuid())
  userId    String
  taskId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  questTask QuestTask @relation(fields: [taskId], references: [id])
  user      User      @relation(fields: [userId], references: [id])

  @@unique([userId, taskId])
}

model MarketplaceModel {
  id          String   @id @default(cuid())
  name        String   @db.VarChar(255)
  type        String   @db.VarChar(255)
  creator     String   @db.VarChar(255)
  description String?
  price       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  views       Int      @default(0)
  likes       Int      @default(0)
  shares      Int      @default(0)
  link        String   @db.VarChar(255)
}

model MarketplaceModelLikes {
  id        String   @id @default(cuid())
  modelId   String   @db.VarChar(255)
  userEmail String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MarketplaceModelViews {
  id        String   @id @default(cuid())
  modelId   String   @db.VarChar(255)
  userEmail String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MarketplaceModelLikesV2 {
  id        String   @id @default(cuid())
  modelId   String   @db.VarChar(255)
  wallet    String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MarketplaceModelViewsV2 {
  id        String   @id @default(cuid())
  modelId   String   @db.VarChar(255)
  wallet    String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ClaimedRewards {
  id        String   @id @default(cuid())
  wallet    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
